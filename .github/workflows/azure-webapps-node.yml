#当提交被推送到默认分支时，此工作流将构建node.js应用程序并将其推送到Azure Web App。
#
#此工作流假定您已经创建了目标应用程序服务网页
#有关说明，请参阅https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
#要配置此工作流，请执行以下操作:
#
# 1. 下载Azure Web页面的发布配置文件您可以从Azure门户中Web应用的概览页面下载此文件。
#如需了解更多信息：https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#生成部署凭据
#
# 2. 在存储库中创建一个名为Azure_Web app_发布简介的秘密，将发布简介内容粘贴为该秘密的值。
#有关获取发布配置文件的说明，请参阅:https://docs.microsoft.com/azure/app-service/deploy-github-actions#配置Github的秘密
#
# 3. 更改Azure_WEBAPP_NAME的值。或者，更改下面的Azure_WEBAPP_PACKAGE_PATH和NODE_VERSION环境变量。
#
#有关面向azure的更多信息：https://github.com/Azure/Actions
#有关应用程序部署操作的详细信息：https://github.com/Azure/webapps-deploy
#要开始使用GitHub行动工作流以部署到Azure的更多示例，请执行以下操作：https://github.com/Azure/actions-workflow-samples

在:
推:
分支机构: [ “主要的”]
工作流_分派:

环境:
Azure_网站应用程序_名称: 你的名字#将此设置为应用程序的名称
Azure_WEBAPP_软件包_路径: '.'      #将此设置为网络应用程序项目的路径，默认为存储库根目录
节点_版本: '14.x'                #将此设置为要使用的节点版本

权限:
目录: 阅读

工作:
建造:
奔跑: Ubuntu最新版
步骤:
    - 使用: 操作/签出@v4

    - 姓名: 设置Node.js
使用: 操作/设置节点@v3
和:
节点版本: ${{版本号}}
缓存: 'npm'

    - 姓名: npm安装，建造,并且测试了
运行: |
-npm安装
-npm运行构建-if-present
npm运行测试-if-present

    - 姓名: 上传部署作业的工件
使用: 动作/上传工件@v3
和:
姓名: 节点应用程序
路径: .

部署:
权限:
目录: 没有人
奔跑: Ubuntu最新版
需要: 建造
环境:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
